var searchIndex = JSON.parse('{\
"streams_contract":{"doc":"Roloi - Streams Contract","t":[0,0,0,0,4,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,6,6,6,6,6,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5],"n":["errors","stream","streams_contract","utils","ContractError","EmptyFunds","EndDateAndDurationAreEmpty","ExpectedWithdrawalAmountExceedsStreamAvailableBalance","GeneralError","RecipientCannotBePayer","StreamDoesNotExist","StreamDurationShouldBeGreater","StreamEndDateShouldBeLater","Unauthorized","Unexpected","ValidationError","WithdrawTransferFailed","borrow","borrow_mut","clone","clone_into","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","eq","fmt","from","into","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","vzip","STREAM_MINIMUM_DURATION","Stream","allocate_spread","borrow","borrow_mut","clear_packed","clear_spread","clone","clone_into","current_balance","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode_to","end_date","eq","fmt","from","get_available_balance","has_permission_to_withdraw","into","is_finished","layout","ne","new","original_balance","payer","pull_packed","pull_spread","push_packed","push_spread","recipient","start_date","to_keyed_vec","to_owned","total_duration","try_from","try_into","type_id","type_info","vzip","withdraw","AccountId","Balance","BlockNumber","Environment","Hash","StreamsContract","StreamsContractRef","Timestamp","allocate_spread","borrow","borrow","borrow_mut","borrow_mut","call","call_mut","clear_packed","clear_spread","clear_spread","clone","clone_into","create_stream","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode","encode_to","env","eq","fmt","from","from","from_account_id","get_stream_by_id","hash","inner","into","into","layout","layout","ne","new","next_stream_id","owner","pull_packed","pull_spread","pull_spread","push_packed","push_spread","push_spread","recipient_withdraw","streams","to_account_id","to_keyed_vec","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_info","using_encoded","vzip","vzip","get_current_time_in_seconds","validate_and_generate_stream_end_date","validate_stream_creation_parameters","validate_stream_duration","validate_stream_end_date"],"q":["streams_contract","","","","streams_contract::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","streams_contract::stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","streams_contract::streams_contract","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","streams_contract::utils","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Minimum duration that a stream can have.","Struct for storing streams","","","","","","","","Current balance of the stream.","","","","","","Date when the stream will end. Measured in seconds.","","","Returns the argument unchanged.","Calculates the stream availabe balance based on the …","Check if the caller has permission to withdraw from the …","Calls <code>U::from(self)</code>.","Check if the stream is finished.","","","","Initial balance of the stream.","AccountId of the payer.","","","","","AccountId of the recipient.","Date when the stream started. Measured in seconds.","","","Calculates the total duration of the stream.","","","","","","Reduces the current stream balance by the specified amount.","","","","","","","","","","","","","","","","","","","","","Creates a token stream from the sender to the specified …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a stream by its ID.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Withdraws tokens from a stream. The recipient can specify …","","","","","","","","","","","","","","","Get the time of the current block.","Validates and generate the stream end date based on the …","Validates the <code>create_stream</code> message parameters.","Validates the stream duration based on the <code>duration</code> …","Validates the stream end date based on the <code>end_date</code> …"],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,3,4,3,4,3,4,4,4,4,3,4,4,4,4,4,4,4,4,4,3,4,4,4,3,4,4,4,4,4,3,4,3,4,4,3,3,4,4,3,4,4,3,4,3,4,4,4,4,3,4,3,4,3,4,4,4,3,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["contracterror",4]],[[["",0],["",0]]],[[["",0]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["u32",0]],["result",4,[["error",3]]]],[[["u32",0],["",0]],["result",4,[["error",3]]]],[[["",0],["",0]]],[[["",0],["contracterror",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]],["vec",3,[["u8",0],["global",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["type",3]],[[]],null,null,[[["keyptr",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["key",3]]],[[["",0],["keyptr",3]]],[[["",0]],["stream",3]],[[["",0],["",0]]],null,[[["",0]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["u32",0]],["result",4,[["error",3]]]],[[["u32",0],["",0]],["result",4,[["error",3]]]],[[["",0],["",0]]],null,[[["",0],["stream",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0],["u64",0]],["u128",0]],[[["",0],["accountid",3]],["result",4,[["contracterror",4]]]],[[]],[[["",0],["u64",0]],["bool",0]],[[["keyptr",3]],["layout",4]],[[["",0],["stream",3]],["bool",0]],[[["accountid",3],["accountid",3],["u128",0],["u64",0],["u64",0]],["stream",3]],null,null,[[["",0],["key",3]]],[[["keyptr",3]]],[[["",0],["key",3]]],[[["",0],["keyptr",3]]],null,null,[[["",0]],["vec",3,[["u8",0],["global",3]]]],[[["",0]]],[[["",0]],["u64",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[],["type",3]],[[]],[[["",0],["u128",0]],["result",4,[["contracterror",4]]]],null,null,null,null,null,null,null,null,[[["keyptr",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0],["key",3]]],[[["",0],["keyptr",3]]],[[["",0],["keyptr",3]]],[[["",0]],["streamscontractref",3]],[[["",0],["",0]]],[[["",0],["option",4,[["u64",0]]],["option",4,[["u64",0]]]],["result",4,[["u64",0],["contracterror",4]]]],[[["",0]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["u32",0]],["result",4,[["error",3]]]],[[["u32",0],["",0]],["result",4,[["error",3]]]],[[["",0]],["vec",3,[["u8",0]]]],[[["",0],["",0]]],[[]],[[["",0],["streamscontractref",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0],["u64",0]],["result",4,[["stream",3],["contracterror",4]]]],[[["",0],["",0]]],null,[[]],[[]],[[["keyptr",3]],["layout",4]],[[["keyptr",3]],["layout",4]],[[["",0],["streamscontractref",3]],["bool",0]],[[],["createbuilder",3,[["unset",3],["unset",3,[["u64",0]]],["unset",3],["set",3,[["executioninput",3,[["emptyargumentlist",6]]]]],["unset",3,[["salt",4]]]]]],null,null,[[["",0],["key",3]]],[[["keyptr",3]]],[[["keyptr",3]]],[[["",0],["key",3]]],[[["",0],["keyptr",3]]],[[["",0],["keyptr",3]]],[[["",0],["u64",0],["option",4,[["u128",0]]]],["result",4,[["u128",0],["contracterror",4]]]],null,[[["",0]]],[[["",0]],["vec",3,[["u8",0],["global",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["type",3]],[[["",0],["fnonce",8]]],[[]],[[]],[[["streamscontract",3]],["u64",0]],[[["option",4,[["u64",0]]],["option",4,[["u64",0]]],["u64",0]],["result",4,[["u64",0],["contracterror",4]]]],[[["accountid",3],["accountid",3],["u128",0]],["result",4,[["contracterror",4]]]],[[["u64",0]],["result",4,[["contracterror",4]]]],[[["u64",0],["u64",0]],["result",4,[["contracterror",4]]]]],"p":[[4,"ContractError"],[3,"Stream"],[3,"StreamsContract"],[3,"StreamsContractRef"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};